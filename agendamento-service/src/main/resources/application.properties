<<<<<<< HEAD
# Configurações da Aplicação
server.port=8081
spring.application.name=agendamento-service

spring.datasource.url=jdbc:mysql://localhost:3306/agendamento_db
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
=======
# Configuracao do Servico de Agendamento

# Spring Datasource
#spring.datasource.url=jdbc:mysql://${DB_HOST_AGENDAMENTO:localhost}:3306/${DB_NAME_AGENDAMENTO:agendamento_db}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.url=jdbc:mysql://db-agendamento:3306/agendamento_db?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.url=jdbc:mysql://localhost:3306/agendamento_db?useSSL=false&allowPublicKeyRetrieval=true&connectTimeout=30000&socketTimeout=60000
#spring.datasource.url=jdbc:mysql://localhost:3306/agendamento_db?useSSL=false&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://${DB_HOST_AGENDAMENTO:localhost}:3306/agendamento_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://${DB_HOST_AGENDAMENTO:localhost}:3306/agendamento_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://${DB_HOST_AGENDAMENTO:localhost}:3306/agendamento_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.dlogging.level.com.zaxxer.hikari=ERROR



spring.datasource.username=agendamento_user
spring.datasource.password=secure_password_agendamento
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
#spring.jpa.hibernate.ddl-auto=validate
>>>>>>> origin/feature/agendamento
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

<<<<<<< HEAD
# Configurações do Kafka - Serão sobrescritas pelas variáveis de ambiente do Docker
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=agendamento-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Topico Kafka para notificações de consulta
kafka.topic.consulta.nome=consultas.topic

# Logging
logging.level.org.springframework=INFO
logging.level.br.com.fiap.techchallenge=DEBUG
=======
# Configuracoes do Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.create-schemas=true
spring.flyway.validate-on-migrate=true
logging.level.org.flywaydb=DEBUG



# Kafka Producer
#spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
#spring.kafka.bootstrap-servers=localhost:29092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Topico Kafka para notificacoes de consulta
kafka.topic.consulta.nome=consultas.topic

# Server Port
server.port=8081

>>>>>>> origin/feature/agendamento
